{"ast":null,"code":"var _jsxFileName = \"D:\\\\DSI32\\\\ProjetChef\\\\platform_iset\\\\frontend\\\\src\\\\components\\\\ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { AuthContext } from '../auth/AuthContext';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute({\n  children\n}) {\n  _s();\n  const {\n    accessToken\n  } = useContext(AuthContext);\n  if (!accessToken) return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 28\n  }, this);\n  return children;\n}\n_s(ProtectedRoute, \"fXMtSYRzMPk0Prf2ocsLHebGNas=\");\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useContext","AuthContext","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","accessToken","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/DSI32/ProjetChef/platform_iset/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { AuthContext } from '../auth/AuthContext';\r\nimport { Navigate } from 'react-router-dom';\r\n\r\nexport default function ProtectedRoute({ children }) {\r\n  const { accessToken } = useContext(AuthContext);\r\n  if (!accessToken) return <Navigate to=\"/login\" replace />;\r\n  return children;\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,eAAe,SAASC,cAAcA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACnD,MAAM;IAAEC;EAAY,CAAC,GAAGR,UAAU,CAACC,WAAW,CAAC;EAC/C,IAAI,CAACO,WAAW,EAAE,oBAAOJ,OAAA,CAACF,QAAQ;IAACO,EAAE,EAAC,QAAQ;IAACC,OAAO;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;EACzD,OAAOR,QAAQ;AACjB;AAACC,EAAA,CAJuBF,cAAc;AAAAU,EAAA,GAAdV,cAAc;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}